basePath: /
definitions:
  domain.ConfirmPair:
    properties:
      code:
        type: string
      id:
        type: integer
    type: object
  domain.Credentials:
    properties:
      email:
        type: string
      password:
        items:
          type: integer
        type: array
    type: object
  domain.UserWithoutId:
    properties:
      email:
        type: string
      middleName:
        type: string
      name:
        type: string
      password:
        items:
          type: integer
        type: array
      role:
        type: string
      surname:
        type: string
    type: object
  domain.UserWithoutPassword:
    properties:
      email:
        type: string
      middleName:
        type: string
      name:
        type: string
      role:
        type: string
      surname:
        type: string
    type: object
info:
  contact:
    email: ax.chinaev@yandex.ru
    name: Alex Chinaev
    url: https://vk.com/l.chinaev
  description: API of the AtomHack Auth service
  license:
    name: AS IS (NO WARRANTY)
  title: AtomHack Auth APU
  version: "1.0"
paths:
  /api/v1/auth/check:
    post:
      description: check if user is authenticated
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              err:
                type: string
            type: object
        "409":
          description: Conflict
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: check getUserID
      tags:
      - Auth
  /api/v1/auth/confirm:
    post:
      description: confirm user
      parameters:
      - description: user id and verification code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.ConfirmPair'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: confirm user
      tags:
      - Auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: create user session and put it into cookie
      parameters:
      - description: user credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Credentials'
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  id:
                    type: integer
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              err:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: login user
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      description: delete current session and nullify cookie
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              err:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: logout user
      tags:
      - Auth
  /api/v1/auth/me:
    get:
      description: returns user data
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  user:
                    $ref: '#/definitions/domain.UserWithoutPassword'
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              err:
                type: string
            type: object
        "409":
          description: Conflict
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: returns user data
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: add new user to db and return it id
      parameters:
      - description: user credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UserWithoutId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  id:
                    type: integer
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: register user
      tags:
      - Auth
schemes:
- http
swagger: "2.0"
